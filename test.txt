{
  "userEmail": "john.doe@example.com",
  "clearanceLevel": "Top Secret",
  "steps": [
    {
      "name": "application_submitted",
      "status": "completed",
      "date": "2025-02-04T10:23:00Z"
    },
    {
      "name": "initiated",
      "status": "in_progress",
      "date": "2025-02-26T14:45:00Z"
    },
    {
      "name": "questionnaire_submitted",
      "status": "pending"
    },
    {
      "name": "review_investigation",
      "status": "pending"
    },
    {
      "name": "final_review",
      "status": "pending"
    },
    {
      "name": "completed",
      "status": "pending"
    }
  ],
  "currentStatus": {
    "name": "initiated",
    "date": "2025-02-26T14:45:00Z",
    "timeInStatusDays": 20,
    "pendingItems": 42,
    "pendingItemsDueInDays": 21
  },
  "statusHistory": [
    {
      "name": "application_submitted",
      "date": "2025-02-04T10:23:00Z",
      "description": "Security officer has submitted Top Secret clearance"
    },
    {
      "name": "initiated",
      "date": "2025-02-26T14:45:00Z",
      "description": "Application assigned to security specialist"
    }
  ],
  "estimatedTimeline": [
    {
      "key": "application_submitted",
      "label": "Application Submitted",
      "avgDurationDays": 14,
      "rangeDays": { "min": 12, "max": 16 }
    },
    {
      "key": "initiated",
      "label": "Initiated",
      "avgDurationDays": 21,
      "rangeDays": { "min": 21, "max": 21 }
    },
    {
      "key": "questionnaire_submitted",
      "label": "Questionnaire Submitted",
      "avgDurationDays": null,
      "rangeDays": null
    },
    {
      "key": "review_investigation",
      "label": "Review & Investigation",
      "avgDurationDays": null,
      "rangeDays": null
    },
    {
      "key": "final_review",
      "label": "Final Review",
      "avgDurationDays": null,
      "rangeDays": null
    }
  ]
}
----

// ClearanceStatusRequest.java
package com.example.clearance;

import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class ClearanceStatusRequest {
    private String email;
}

-------
// ClearanceStatusResponse.java
package com.example.clearance;

import lombok.Getter;
import lombok.Setter;

import java.util.List;

@Getter
@Setter
public class ClearanceStatusResponse {
    private String userEmail;
    private String clearanceLevel;
    private List<Step> steps;
    private CurrentStatus currentStatus;
    private List<StatusHistoryEntry> statusHistory;
    private List<EstimatedTimelineEntry> estimatedTimeline;
}

------------

// Step.java
// Step.java
package com.example.clearance;

import lombok.Getter;
import lombok.Setter;

import java.time.Instant;

@Getter
@Setter
public class Step {
    private String name;
    private Status status;      // uses the new enum
    private Instant date;       // may be null if pending
}


------------

// CurrentStatus.java
package com.example.clearance;

import lombok.Getter;
import lombok.Setter;

import java.time.Instant;

@Getter
@Setter
public class CurrentStatus {
    private String name;
    private Instant date;
    private int timeInStatusDays;
    private int pendingItems;
    private int pendingItemsDueInDays;
}

// StatusHistoryEntry.java
package com.example.clearance;

import lombok.Getter;
import lombok.Setter;

import java.time.Instant;

@Getter
@Setter
public class StatusHistoryEntry {
    private String name;
    private Instant date;
    private String description;
}


// EstimatedTimelineEntry.java
package com.example.clearance;

import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class EstimatedTimelineEntry {
    private String key;
    private String label;
    private Integer avgDurationDays;
    private RangeDays rangeDays;
}


// RangeDays.java
package com.example.clearance;

import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class RangeDays {
    private Integer min;
    private Integer max;
}


// ClearanceController.java
package com.example.clearance;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.time.Instant;
import java.util.Arrays;

@RestController
@RequestMapping("/api/v1")
public class ClearanceController {

    @GetMapping("/clearance-status")
    public ClearanceStatusResponse getClearanceStatus(@RequestParam("email") String email) {
        // --- build mock response ---
        ClearanceStatusResponse resp = new ClearanceStatusResponse();
        resp.setUserEmail(email);
        resp.setClearanceLevel("Top Secret");

        // steps
        Step s1 = new Step();
        s1.setName("application_submitted");
        s1.setStatus("completed");
        s1.setDate(Instant.parse("2025-02-04T10:23:00Z"));

        Step s2 = new Step();
        s2.setName("initiated");
        s2.setStatus("in_progress");
        s2.setDate(Instant.parse("2025-02-26T14:45:00Z"));

        Step s3 = new Step();
        s3.setName("questionnaire_submitted");
        s3.setStatus("pending");
        // no date

        resp.setSteps(Arrays.asList(s1, s2, s3));

        // currentStatus
        CurrentStatus cs = new CurrentStatus();
        cs.setName("initiated");
        cs.setDate(Instant.parse("2025-02-26T14:45:00Z"));
        cs.setTimeInStatusDays(20);
        cs.setPendingItems(42);
        cs.setPendingItemsDueInDays(21);
        resp.setCurrentStatus(cs);

        // statusHistory
        StatusHistoryEntry h1 = new StatusHistoryEntry();
        h1.setName("application_submitted");
        h1.setDate(Instant.parse("2025-02-04T10:23:00Z"));
        h1.setDescription("Security officer has submitted Top Secret clearance");

        StatusHistoryEntry h2 = new StatusHistoryEntry();
        h2.setName("initiated");
        h2.setDate(Instant.parse("2025-02-26T14:45:00Z"));
        h2.setDescription("Application assigned to security specialist");

        resp.setStatusHistory(Arrays.asList(h1, h2));

        // estimatedTimeline (optionalâ€”for UI you may omit or fill similarly)
        EstimatedTimelineEntry e1 = new EstimatedTimelineEntry();
        e1.setKey("application_submitted");
        e1.setLabel("Application Submitted");
        e1.setAvgDurationDays(14);
        RangeDays r1 = new RangeDays();
        r1.setMin(12);
        r1.setMax(16);
        e1.setRangeDays(r1);

        EstimatedTimelineEntry e2 = new EstimatedTimelineEntry();
        e2.setKey("initiated");
        e2.setLabel("Initiated");
        e2.setAvgDurationDays(21);
        RangeDays r2 = new RangeDays();
        r2.setMin(21);
        r2.setMax(21);
        e2.setRangeDays(r2);

        resp.setEstimatedTimeline(Arrays.asList(e1, e2));

        return resp;
    }
}


// Status.java
package com.example.clearance;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public enum Status {
    COMPLETED("completed"),
    IN_PROGRESS("in_progress"),
    PENDING("pending");

    private final String value;
    Status(String value) { this.value = value; }

    @JsonValue
    public String getValue() {
        return value;
    }

    @JsonCreator
    public static Status fromValue(String value) {
        for (Status s : values()) {
            if (s.value.equalsIgnoreCase(value)) {
                return s;
            }
        }
        throw new IllegalArgumentException("Unknown status: " + value);
    }
}


