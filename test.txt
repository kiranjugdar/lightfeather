import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

static void addSubmitOrEstablishmentDate(Map<String, Object> params, ClaimInfo info) {
    String submitDateStr       = info.getClaimStatusData().getInternetSubmitDate();
    String establishmentDateStr = info.getClaimStatusData().getEstablishmentDate();

    // parse helpers
    LocalDate submitDate       = parseDate(submitDateStr);
    LocalDate establishmentDate = parseDate(establishmentDateStr);

    // determine which to use
    LocalDate earliest = null;
    if (submitDate != null && establishmentDate != null) {
        earliest = submitDate.isBefore(establishmentDate) 
                   ? submitDate 
                   : establishmentDate;
    } else if (submitDate != null) {
        earliest = submitDate;
    } else if (establishmentDate != null) {
        earliest = establishmentDate;
    }

    // only put if we found one
    if (earliest != null) {
        // re‑format back to the same string format
        params.put(INTERNET_SUBMIT_DATE, earliest.format(DateTimeFormatter.ISO_DATE));
    }
}

// safe parser that returns null on bad input
private static LocalDate parseDate(String dateStr) {
    if (dateStr == null) return null;
    try {
        // adjust formatter if your strings include time, e.g. DateTimeFormatter.ISO_DATE_TIME
        return LocalDate.parse(dateStr, DateTimeFormatter.ISO_DATE);
    } catch (DateTimeParseException e) {
        // log.warn("Could not parse date – ", e);
        return null;
    }
}
