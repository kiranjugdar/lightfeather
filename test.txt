// src/main/java/com/yourcompany/yourapp/ClaimStatusDetailsComparator.java
package com.yourcompany.yourapp;

import java.util.Comparator;

public class ClaimStatusDetailsComparator
        implements Comparator<ClaimStatusDetails> {

    @Override
    public int compare(ClaimStatusDetails d1,
                       ClaimStatusDetails d2) {
        String code1 = d1.getTitleCode();
        String code2 = d2.getTitleCode();

        // --- nulls last ---
        if (code1 == null && code2 == null) return 0;
        if (code1 == null)                 return 1;
        if (code2 == null)                 return -1;

        // --- rank each code ---
        int rank1 = rank(code1);
        int rank2 = rank(code2);

        // smaller rank => comes first
        return Integer.compare(rank1, rank2);
    }

    /**
     * Your custom ordering:
     *  "T2"  → 1
     *  "T16" → 2
     *  "T18" → 3
     *  any other code → Integer.MAX_VALUE (so they sort last)
     */
    private int rank(String titleCode) {
        if ("T2".equals(titleCode)) {
            return 1;
        } else if ("T16".equals(titleCode)) {
            return 2;
        } else if ("T18".equals(titleCode)) {
            return 3;
        } else {
            return Integer.MAX_VALUE;
        }
    }
}

-----
// CommonApsService.java
package com.yourcompany.yourapp;

import java.util.List;

public class CommonApsService {

    public List<ClaimStatusDetails> sortClaimStatusDetails(
            List<ClaimStatusDetails> list
    ) {
        return list.stream()
                   .sorted(new ClaimStatusDetailsComparator())
                   .toList();  // or .collect(Collectors.toList()) on Java 8–15
    }

    // …other methods…
}

