private ClaimStatusData buildResponseAppData(List<CommonContent> claimsList) {
    ClaimStatusData claimStatusUpdate = new ClaimStatusData();
    
    // Handle empty or null list upfront
    if (claimsList == null || claimsList.isEmpty()) {
        claimStatusUpdate.setStatus(AppDataStatus.NO_CLAIMS_FOUND_0400);
        return claimStatusUpdate;
    }

    // Set the status to indicate that claims were found
    claimStatusUpdate.setStatus(AppDataStatus.CLAIMS_FOUND_0400);

    // Use parallelStream() to process in parallel
    List<ClaimStatus> claimsStatusList = claimsList.parallelStream()
        .map(claim -> {
            // Log inside the parallel operation 
            logger.info("Number of Claims: " + claimsList.size());
            
            // Create and populate the ClaimStatus object
            ClaimStatus claimsStatus = new ClaimStatus();
            claimsStatus.setPolicy(claim.getPolicyId());
            claimsStatus.setFilmName(
                officeLookupService
                    .getOfficeLookupByTypeAndCode(OfficeLookUpType.LDF, claim.getCode())
                    .getOfficeName()
            );
            claimsStatus.setLdfClaimNumber(claim.getClaimNumber());
            claimsStatus.setLdfClaimStatus(claim.getClaimStatus());
            claimsStatus.setClaimCaseNumber(claim.getCaseNumber());
            claimsStatus.setClaimType(claim.getType());
            claimsStatus.setStatus(AppDataStatus.CLAIMSTATUS_SUCCESSFUL);

            return claimsStatus;
        })
        .collect(Collectors.toList());

    // Set the processed list into the response object
    claimStatusUpdate.setClaimsStatus(claimsStatusList);

    return claimStatusUpdate;
}
